// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {types} from '../models';
import {crud} from '../models';
import {base} from '../models';
import {menu} from '../models';
import {sdk} from '../models';
import {abis} from '../models';
import {preferences} from '../models';
import {utils} from '../models';
import {chunks} from '../models';
import {context} from '../models';
import {exports} from '../models';
import {project} from '../models';
import {monitors} from '../models';
import {names} from '../models';
import {app} from '../models';

export function AbisCrud(arg1:types.ListKind,arg2:crud.Operation,arg3:types.Abi,arg4:string):Promise<void>;

export function AddrToName(arg1:base.Address):Promise<string>;

export function BuildDalleDressForProject():Promise<Record<string, any>>;

export function CancelAllFetches():Promise<number>;

export function CancelFetch(arg1:types.ListKind):Promise<void>;

export function ChangeImageStorageLocation(arg1:string):Promise<void>;

export function CheckRPCStatus():Promise<string>;

export function ChunksCrud(arg1:types.ListKind,arg2:crud.Operation,arg3:any):Promise<void>;

export function CleanNames(arg1:string):Promise<void>;

export function CloseProject(arg1:string):Promise<void>;

export function ConvertToAddress(arg1:string):Promise<base.Address|boolean>;

export function ExportsCrud(arg1:types.ListKind,arg2:crud.Operation,arg3:any,arg4:string,arg5:string):Promise<void>;

export function ExportsNeedsUpdate(arg1:types.ListKind,arg2:string,arg3:string):Promise<boolean>;

export function FileNew(arg1:menu.CallbackData):Promise<void>;

export function FileOpen(arg1:menu.CallbackData):Promise<void>;

export function FileQuit(arg1:menu.CallbackData):Promise<void>;

export function FileSave(arg1:menu.CallbackData):Promise<void>;

export function FileSaveAs(arg1:menu.CallbackData):Promise<void>;

export function GetAbisPage(arg1:types.ListKind,arg2:number,arg3:number,arg4:sdk.SortSpec,arg5:string):Promise<abis.AbisPage>;

export function GetAppId():Promise<preferences.Id>;

export function GetAppPreferences():Promise<preferences.AppPreferences>;

export function GetChainList():Promise<utils.ChainList>;

export function GetChunksPage(arg1:types.ListKind,arg2:number,arg3:number,arg4:sdk.SortSpec,arg5:string):Promise<chunks.ChunksPage>;

export function GetContext():Promise<context.Context>;

export function GetExportsCount(arg1:types.ListKind,arg2:string,arg3:string):Promise<number>;

export function GetExportsPage(arg1:types.ListKind,arg2:number,arg3:number,arg4:sdk.SortSpec,arg5:string,arg6:string,arg7:string):Promise<exports.ExportsPage>;

export function GetFilename():Promise<project.Project>;

export function GetImageURL(arg1:string):Promise<string>;

export function GetLanguage():Promise<string>;

export function GetLastAddress():Promise<string>;

export function GetLastChain():Promise<string>;

export function GetLastTab(arg1:string):Promise<types.ListKind>;

export function GetMarkdown(arg1:string,arg2:string,arg3:string):Promise<string>;

export function GetMonitorsPage(arg1:types.ListKind,arg2:number,arg3:number,arg4:sdk.SortSpec,arg5:string):Promise<monitors.MonitorsPage>;

export function GetNamesPage(arg1:types.ListKind,arg2:number,arg3:number,arg4:sdk.SortSpec,arg5:string):Promise<names.NamesPage>;

export function GetNodeStatus():Promise<types.MetaData>;

export function GetOpenProjects():Promise<Array<Record<string, any>>>;

export function GetOrgPreferences():Promise<preferences.OrgPreferences>;

export function GetProjectAddress():Promise<base.Address>;

export function GetTheme():Promise<string>;

export function GetUserInfoStatus():Promise<app.UserInfoStatus>;

export function GetUserPreferences():Promise<preferences.UserPreferences>;

export function GetWizardReturn():Promise<string>;

export function IsInitialized():Promise<boolean>;

export function IsReady():Promise<boolean>;

export function LoadExportsData(arg1:types.ListKind,arg2:string,arg3:string):Promise<void>;

export function LogBackend(arg1:string):Promise<void>;

export function LogFrontend(arg1:string):Promise<void>;

export function MonitorsClean(arg1:Array<string>):Promise<void>;

export function MonitorsCrud(arg1:types.ListKind,arg2:crud.Operation,arg3:types.Monitor,arg4:string):Promise<void>;

export function NameFromAddress(arg1:string):Promise<types.Name|boolean>;

export function NamesCrud(arg1:types.ListKind,arg2:crud.Operation,arg3:types.Name,arg4:string):Promise<void>;

export function PublishNames(arg1:string):Promise<void>;

export function RegisterCollection(arg1:types.Collection):Promise<void>;

export function Reload(arg1:types.ListKind):Promise<void>;

export function ResetExportsData(arg1:types.ListKind,arg2:string,arg3:string):Promise<void>;

export function ResetStore(arg1:string):Promise<void>;

export function SaveBounds(arg1:number,arg2:number,arg3:number,arg4:number):Promise<void>;

export function SetAppPreferences(arg1:preferences.AppPreferences):Promise<void>;

export function SetChain(arg1:preferences.Chain):Promise<void>;

export function SetHelpCollapsed(arg1:boolean):Promise<void>;

export function SetInitialized(arg1:boolean):Promise<void>;

export function SetLanguage(arg1:string):Promise<void>;

export function SetLastAddress(arg1:string):Promise<void>;

export function SetLastChain(arg1:string):Promise<void>;

export function SetLastTab(arg1:string,arg2:types.ListKind):Promise<void>;

export function SetLastView(arg1:string):Promise<void>;

export function SetMenuCollapsed(arg1:boolean):Promise<void>;

export function SetOrgPreferences(arg1:preferences.OrgPreferences):Promise<void>;

export function SetProjectAddress(arg1:base.Address):Promise<void>;

export function SetTheme(arg1:string):Promise<void>;

export function SetUserInfo(arg1:string,arg2:string):Promise<void>;

export function SetUserPreferences(arg1:preferences.UserPreferences):Promise<void>;

export function SwitchToProject(arg1:string):Promise<void>;

export function WailsExports():Promise<types.DataLoadedPayload>;
