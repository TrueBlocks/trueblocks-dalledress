{{- $class := .Class -}}
{{- $lower := toLower $class -}}
{{- $single := toSingular $class -}}
{{- if eq 1 2 -}}
// Copyright 2016, 2026 The TrueBlocks Authors. All rights reserved.
// Use of this source code is governed by a license that can
// be found in the LICENSE file.
/*
 * Parts of this file were auto generated. Edit only those parts of
 * the code inside of 'EXISTING_CODE' tags.
 */

package {{toLower .Class}}

import (
	"fmt"

	"github.com/TrueBlocks/trueblocks-core/src/apps/chifra/pkg/crud"
	"github.com/TrueBlocks/trueblocks-dalledress/pkg/types"
)

type {{.Class}}Crud struct{}

func New{{.Class}}Crud() *{{.Class}}Crud {
	return &{{.Class}}Crud{}
}

func (c *{{.Class}}Collection) Crud(
	payload *types.Payload,
	op crud.Operation,
	item interface{},
) error {
	crudHandler := New{{.Class}}Crud()
	switch op {
	case crud.Create:
		return crudHandler.Create(item)
	case crud.Update:
		return crudHandler.Update(item)
	case crud.Delete:
		return crudHandler.Delete(item)
	case crud.Remove:
		return crudHandler.Delete(item)
	default:
		return fmt.Errorf("operation %s not supported for {{toLower .Class}}", op)
	}
}

func (c *{{.Class}}Crud) Create(item interface{}) error {
	return types.NewValidationError("{{toLower .Class}}", "", "create",
		fmt.Errorf("{{toLower .Class}} collection is read-only"))
}

func (c *{{.Class}}Crud) Update(item interface{}) error {
	return types.NewValidationError("{{toLower .Class}}", "", "update",
		fmt.Errorf("{{toLower .Class}} collection is read-only"))
}

func (c *{{.Class}}Crud) Delete(item interface{}) error {
	return types.NewValidationError("{{toLower .Class}}", "", "delete",
		fmt.Errorf("{{toLower .Class}} collection is read-only"))
}
{{end}}
