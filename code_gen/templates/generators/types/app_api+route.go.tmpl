{{- $class := .Class -}}
{{- $lower := toLower $class -}}
{{- $single := toSingular $class -}}
// Copyright 2016, 2026 The TrueBlocks Authors. All rights reserved.
// Use of this source code is governed by a license that can
// be found in the LICENSE file.
/*
 * Parts of this file were auto generated. Edit only those parts of
 * the code inside of 'EXISTING_CODE' tags.
 */

package app

import (
	"github.com/TrueBlocks/trueblocks-dalledress/pkg/types"
	"github.com/TrueBlocks/trueblocks-dalledress/pkg/types/{{$lower}}"
	//
	{{- if .HasCruds}}
	"github.com/TrueBlocks/trueblocks-core/src/apps/chifra/pkg/crud"{{end}}
	sdk "github.com/TrueBlocks/trueblocks-sdk/v5"
    // EXISTING_CODE
    // EXISTING_CODE
)

func (a *App) Get{{$class}}Page(
	payload *types.Payload,
	first, pageSize int,
	sort sdk.SortSpec,
	filter string,
) (*{{$lower}}.{{$class}}Page, error) {
	collection := {{$lower}}.Get{{$class}}Collection(payload)
	return getCollectionPage[*{{$lower}}.{{$class}}Page](collection, payload, first, pageSize, sort, filter)
}

{{if .HasCruds}}func (a *App) {{$class}}Crud(
	payload *types.Payload,
	op crud.Operation,
	item *{{$lower}}.{{$single}},
) error {
	collection := {{$lower}}.Get{{$class}}Collection(payload)
	return collection.Crud(payload, op, item)
}{{end}}

func (a *App) Get{{$class}}Summary(payload *types.Payload) types.Summary {
	collection := {{$lower}}.Get{{$class}}Collection(payload)
	return collection.GetSummary()
}

func (a *App) Reload{{$class}}(payload *types.Payload) error {
	collection := {{$lower}}.Get{{$class}}Collection(payload)
	collection.Reset(payload.DataFacet)
	collection.LoadData(payload.DataFacet)
	return nil
}

// EXISTING_CODE
// EXISTING_CODE
